# Production Docker Compose Configuration
# Usage: docker-compose -f docker-compose.yaml -f docker-compose.prod.yaml up

version: '3.8'

services:
  # Production backend configuration
  backend:
    environment:
      NODE_ENV: production
      # Use environment variables from .env file in production
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      DATABASE_URL: ${DATABASE_URL}
    # Remove volume mounts for production
    volumes: []
    restart: always
    
  # Production frontend configuration
  frontend:
    environment:
      VITE_API_URL: ${VITE_API_URL:-https://api.yourdomain.com/api}
    # Remove volume mounts for production
    volumes: []
    restart: always

  # Production database configuration
  db:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tourist_village_prod_db}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: always

  # Remove development services
  redis:
    restart: always
    
  pgadmin:
    profiles:
      - admin # Only start with --profile admin

# Production volumes
volumes:
  postgres_prod_data:
    driver: local
    name: tourist-village-postgres-prod-data
